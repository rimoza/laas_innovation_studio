Project file structure:
.\next-env.d.ts
.\next.config.js
.\package.json
.\tailwind.config.ts
.\tsconfig.json
.\app\globals.css
.\app\layout.tsx
.\app\page.tsx
.\components\animatedContent.tsx
.\components\contactForm.tsx
.\components\footer.tsx
.\components\header.tsx
.\components\portfolio.tsx
.\components\smoothScroll.tsx
.\components\testimonial.tsx
.\components\ui\button.tsx
.\components\ui\input.tsx
.\components\ui\sheet.tsx
.\components\ui\textarea.tsx
.\lib\utils.ts
.\scripts\list_files.py

STARTFILE: .\next-env.d.ts
/// <reference types="next" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/basic-features/typescript for more information.

ENDFILE: .\next-env.d.ts

STARTFILE: .\next.config.js
/** @type {import('next').NextConfig} */
const nextConfig = {
    images: {
      domains: ['img.freepik.com', 'i.pravatar.cc'],
    },
  }
  
  module.exports = nextConfig
ENDFILE: .\next.config.js

STARTFILE: .\package.json
{
  "name": "laas-media-landing",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "@radix-ui/react-dialog": "^1.1.1",
    "@radix-ui/react-slot": "^1.1.0",
    "class-variance-authority": "^0.7.0",
    "clsx": "^2.1.1",
    "framer-motion": "^11.3.28",
    "lucide-react": "^0.428.0",
    "next": "14.2.5",
    "react": "^18",
    "react-dom": "^18",
    "tailwind-merge": "^2.5.2",
    "tailwindcss-animate": "^1.0.7"
  },
  "devDependencies": {
    "@types/node": "^20",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "eslint": "^8",
    "eslint-config-next": "14.2.5",
    "postcss": "^8",
    "tailwindcss": "^3.4.1",
    "typescript": "^5"
  }
}

ENDFILE: .\package.json

STARTFILE: .\tailwind.config.ts
import type { Config } from "tailwindcss"

const config = {
  darkMode: ["class"],
  content: [
    './pages/**/*.{ts,tsx}',
    './components/**/*.{ts,tsx}',
    './app/**/*.{ts,tsx}',
    './src/**/*.{ts,tsx}',
	],
  prefix: "",
  theme: {
    container: {
      center: true,
      padding: "2rem",
      screens: {
        "2xl": "1400px",
      },
    },
    extend: {
      colors: {
        'deep-blue': '#0047AB',
        'vibrant-orange': '#FF5733',
        'light-blue': '#4D94FF',
        'soft-orange': '#FFA07A',
        'light-gray': '#F5F5F5',
        'dark-gray': '#333333',
        border: "hsl(var(--border))",
        input: "hsl(var(--input))",
        ring: "hsl(var(--ring))",
        background: "hsl(var(--background))",
        foreground: "hsl(var(--foreground))",
        primary: {
          DEFAULT: "hsl(var(--primary))",
          foreground: "hsl(var(--primary-foreground))",
        },
        secondary: {
          DEFAULT: "hsl(var(--secondary))",
          foreground: "hsl(var(--secondary-foreground))",
        },
        destructive: {
          DEFAULT: "hsl(var(--destructive))",
          foreground: "hsl(var(--destructive-foreground))",
        },
        muted: {
          DEFAULT: "hsl(var(--muted))",
          foreground: "hsl(var(--muted-foreground))",
        },
        accent: {
          DEFAULT: "hsl(var(--accent))",
          foreground: "hsl(var(--accent-foreground))",
        },
        popover: {
          DEFAULT: "hsl(var(--popover))",
          foreground: "hsl(var(--popover-foreground))",
        },
        card: {
          DEFAULT: "hsl(var(--card))",
          foreground: "hsl(var(--card-foreground))",
        },
      },
      borderRadius: {
        lg: "var(--radius)",
        md: "calc(var(--radius) - 2px)",
        sm: "calc(var(--radius) - 4px)",
      },
      fontFamily: {
        sans: ['var(--font-open-sans)', 'sans-serif'],
        heading: ['var(--font-montserrat)', 'sans-serif'],
      },
      keyframes: {
        "accordion-down": {
          from: { height: "0" },
          to: { height: "var(--radix-accordion-content-height)" },
        },
        "accordion-up": {
          from: { height: "var(--radix-accordion-content-height)" },
          to: { height: "0" },
        },
      },
      animation: {
        "accordion-down": "accordion-down 0.2s ease-out",
        "accordion-up": "accordion-up 0.2s ease-out",
      },
    },
  },
  plugins: [require("tailwindcss-animate")],
} satisfies Config

export default config
ENDFILE: .\tailwind.config.ts

STARTFILE: .\tsconfig.json
{
  "compilerOptions": {
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}

ENDFILE: .\tsconfig.json

STARTFILE: .\app\globals.css
@tailwind base;
@tailwind components;
@tailwind utilities;
 
@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;

    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;
 
    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;
 
    --primary: 217.7 100% 33.5%;
    --primary-foreground: 210 40% 98%;
 
    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;
 
    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;
 
    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;
 
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 222.2 84% 4.9%;
 
    --radius: 0.5rem;
  }
 
  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
 
    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;
 
    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;
 
    --primary: 217.7 100% 33.5%;
    --primary-foreground: 222.2 47.4% 11.2%;
 
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;
 
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
 
    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;
 
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
 
    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
  }
}
 
@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/* Laas Media Custom Styles */
:root {
  --color-deep-blue: #0047AB;
  --color-vibrant-orange: #FF5733;
  --color-light-blue: #4D94FF;
  --color-soft-orange: #FFA07A;
  --color-white: #FFFFFF;
  --color-light-gray: #F5F5F5;
  --color-dark-gray: #333333;
}

body {
  font-family: 'Open Sans', sans-serif;
  color: var(--color-dark-gray);
}

h1, h2, h3, h4, h5, h6 {
  font-family: 'Montserrat', sans-serif;
  font-weight: 700;
  color: var(--color-deep-blue);
}

.btn-primary {
  background-color: var(--color-deep-blue);
  color: var(--color-white);
}

.btn-secondary {
  background-color: var(--color-vibrant-orange);
  color: var(--color-white);
}

.accent {
  color: var(--color-vibrant-orange);
}

.bg-light {
  background-color: var(--color-light-gray);
}
ENDFILE: .\app\globals.css

STARTFILE: .\app\layout.tsx
import type { Metadata } from "next";
import { Inter, Montserrat, Open_Sans } from "next/font/google";
import "./globals.css";
import Header from "@/components/header";
import Footer from "@/components/footer";
import SmoothScroll from "@/components/smoothScroll";

const inter = Inter({ subsets: ["latin"] });
const montserrat = Montserrat({ subsets: ["latin"], variable: "--font-montserrat" });
const openSans = Open_Sans({ subsets: ["latin"], variable: "--font-open-sans" });

export const metadata: Metadata = {
  title: "Laas Media - Where Creativity Meets Technology",
  description: "Transform your ideas into digital reality with Laas Media's innovative design, cutting-edge technology, and strategic marketing solutions.",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" className="scroll-smooth">
      <body className={`${inter.className} ${montserrat.variable} ${openSans.variable}`}>
        <Header />
        {children}
        <Footer />
        <SmoothScroll />
      </body>
    </html>
  );
}
ENDFILE: .\app\layout.tsx

STARTFILE: .\app\page.tsx
import Portfolio from '@/components/portfolio';
import Testimonial from '@/components/testimonial';
import ContactForm from '@/components/contactForm';
import AnimatedContent from '@/components/animatedContent';

export default function Home() {
  return (
    <main className="flex min-h-screen flex-col">
      <AnimatedContent />
      
      {/* Portfolio Section */}
      <Portfolio />

      {/* Testimonial Section */}
      <Testimonial />

      {/* Contact Form Section */}
      <ContactForm />
    </main>
  );
}
ENDFILE: .\app\page.tsx

STARTFILE: .\components\animatedContent.tsx
"use client";

import Image from "next/image";
import { Button } from "@/components/ui/button";
import { motion, useScroll, useTransform } from "framer-motion";
import { useRef } from "react";
import { ChevronDown } from "lucide-react";

const fadeInUp = {
  hidden: { opacity: 0, y: 60 },
  visible: {
    opacity: 1,
    y: 0,
    transition: {
      duration: 0.6,
      ease: "easeOut",
    },
  },
};

const staggerChildren = {
  visible: {
    transition: {
      staggerChildren: 0.2,
    },
  },
};

const AnimatedContent = () => {
  const ref = useRef(null);
  const { scrollYProgress } = useScroll({
    target: ref,
    offset: ["start start", "end start"],
  });

  const opacity = useTransform(scrollYProgress, [0, 1], [1, 0]);
  const scale = useTransform(scrollYProgress, [0, 1], [1, 0.8]);

  return (
    <>
      {/* Hero Section */}
      <motion.section
        ref={ref}
        className="relative w-full min-h-screen flex items-center justify-center gradient-bg-text bg-gradient-to-r from-deep-blue to-light-blue text-white overflow-hidden px-4"
        initial="hidden"
        animate="visible"
        variants={staggerChildren}
        style={{ opacity, scale }}
      >
        <div className="absolute inset-0 overflow-hidden">
          <div className="absolute inset-0 bg-[url('https://img.freepik.com/free-vector/abstract-background-with-squares_23-2148995948.jpg')] bg-cover bg-center opacity-10"></div>
        </div>
        <motion.div
          className="absolute inset-0 opacity-10"
          animate={{
            backgroundImage: [
              "radial-gradient(circle, #ffffff 1px, transparent 1px)",
              "radial-gradient(circle, #ffffff 2px, transparent 2px)",
            ],
            backgroundSize: ["20px 20px", "30px 30px"],
          }}
          transition={{ duration: 5, repeat: Infinity, repeatType: "reverse" }}
        />
        <div className="container mx-auto px-4 flex flex-col items-center text-center z-10">
          <motion.h1
            className="text-4xl md:text-5xl lg:text-7xl font-bold mb-6 leading-tight"
            variants={fadeInUp}
          >
            Where Creativity Meets Technology
          </motion.h1>
          <motion.p
            className="text-lg md:text-xl lg:text-2xl mb-8 max-w-2xl"
            variants={fadeInUp}
          >
            Transform your ideas into digital reality with Laas Media&apos;s
            innovative design, cutting-edge technology, and strategic marketing
            solutions.
          </motion.p>
          <motion.div variants={fadeInUp}>
            <Button className="bg-vibrant-orange text-white hover:bg-light-blue text-lg px-8 py-3 rounded-full transition-all duration-300 transform hover:scale-105">
              Get Started
            </Button>
          </motion.div>
        </div>
        <motion.div
          className="absolute bottom-10 left-1/2 transform -translate-x-1/2"
          animate={{ y: [0, 10, 0] }}
          transition={{ duration: 1.5, repeat: Infinity }}
        >
          <ChevronDown size={40} />
        </motion.div>
      </motion.section>

      {/* Services Section */}
      <section id="services" className="w-full py-20 bg-light-gray section-padding">
        <div className="container mx-auto px-4">
          <motion.h2
            className="text-4xl md:text-5xl font-bold mb-12 text-center text-deep-blue"
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.5 }}
          >
            Our Services
          </motion.h2>
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-8">
            {[
              {
                name: "Logo Design",
                image:
                  "https://img.freepik.com/free-vector/gradient-golden-luxury-logo-template_23-2149083629.jpg",
              },
              {
                name: "Brand Design",
                image:
                  "https://img.freepik.com/free-vector/flat-design-ui-ux-background-illustrated_23-2149052117.jpg",
              },
              {
                name: "Web Development",
                image:
                  "https://img.freepik.com/free-vector/website-development-banner_33099-1687.jpg",
              },
              {
                name: "Social Media Marketing",
                image:
                  "https://img.freepik.com/free-vector/social-media-marketing-mobile-phone-concept_23-2148423282.jpg",
              },
            ].map((service, index) => (
              <motion.div
                key={index}
                className="bg-white p-6 rounded-lg shadow-lg hover:shadow-xl transition-shadow duration-300 hover-lift glass-effect"
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ duration: 0.5, delay: index * 0.1 }}
              >
                <div className="relative w-full h-40 mb-4 overflow-hidden rounded-lg">
                  <Image
                    src={service.image}
                    alt={service.name}
                    fill
                    style={{ objectFit: "cover" }}
                    className="transition-transform duration-300 transform hover:scale-110"
                  />
                </div>
                <h3 className="text-xl font-semibold mb-4 text-deep-blue">
                  {service.name}
                </h3>
                <p className="text-dark-gray">
                  Elevate your brand with our expert{" "}
                  {service.name.toLowerCase()} services. We craft unique
                  solutions tailored to your business needs.
                </p>
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* About Us Section */}
      <section id="services" className="w-full py-20 bg-light-gray section-padding">
        <div className="container mx-auto px-4">
          <motion.h2
            className="text-4xl md:text-5xl font-bold mb-12 text-center text-deep-blue"
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.5 }}
          >
            About Us
          </motion.h2>
          <div className="flex flex-col md:flex-row items-center">
            <motion.div
              className="md:w-1/2 mb-8 md:mb-0"
              initial={{ opacity: 0, x: -50 }}
              whileInView={{ opacity: 1, x: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.5 }}
            >
              <div className="relative w-full h-[400px] rounded-lg overflow-hidden">
                <Image
                  src="https://img.freepik.com/free-photo/business-concept-with-team-close-up_23-2149151159.jpg"
                  alt="About Laas Media"
                  fill
                  style={{ objectFit: "cover" }}
                  className="rounded-lg transition-transform duration-300 transform hover:scale-105"
                />
              </div>
            </motion.div>
            <motion.div
              className="md:w-1/2 md:pl-12"
              initial={{ opacity: 0, x: 50 }}
              whileInView={{ opacity: 1, x: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.5 }}
            >
              <h3 className="text-2xl font-semibold mb-4 text-deep-blue">
                Our Story
              </h3>
              <p className="text-lg mb-6 text-dark-gray">
                Laas Media is a forward-thinking creative agency that combines
                artistic flair with technical expertise. Founded on the
                principle of continuous innovation, we strive to stay ahead of
                the curve in design trends and technological advancements.
              </p>
              <p className="text-lg mb-6 text-dark-gray">
                Our mission is to empower businesses and individuals with
                cutting-edge digital solutions that drive growth and success in
                the modern marketplace.
              </p>
              <Button className="bg-deep-blue text-white hover:bg-light-blue transition-colors duration-300">
                Learn More
              </Button>
            </motion.div>
          </div>
        </div>
      </section>
    </>
  );
};

export default AnimatedContent;

ENDFILE: .\components\animatedContent.tsx

STARTFILE: .\components\contactForm.tsx
'use client';

import { useState } from 'react';
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { motion } from 'framer-motion';

const ContactForm = () => {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    message: ''
  });

  const [errors, setErrors] = useState({
    name: '',
    email: '',
    message: ''
  });

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setFormData(prevData => ({
      ...prevData,
      [name]: value
    }));
    // Clear error when user starts typing
    setErrors(prevErrors => ({
      ...prevErrors,
      [name]: ''
    }));
  };

  const validateForm = () => {
    let isValid = true;
    const newErrors = { name: '', email: '', message: '' };

    if (!formData.name.trim()) {
      newErrors.name = 'Name is required';
      isValid = false;
    }

    if (!formData.email.trim()) {
      newErrors.email = 'Email is required';
      isValid = false;
    } else if (!/\S+@\S+\.\S+/.test(formData.email)) {
      newErrors.email = 'Email is invalid';
      isValid = false;
    }

    if (!formData.message.trim()) {
      newErrors.message = 'Message is required';
      isValid = false;
    }

    setErrors(newErrors);
    return isValid;
  };

  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    if (validateForm()) {
      // Here you would typically send the form data to your backend
      console.log('Form submitted:', formData);
      // Reset form after submission
      setFormData({ name: '', email: '', message: '' });
      // You might want to show a success message to the user here
    }
  };

  return (
    <section id="contact" className="w-full py-20 bg-light-gray">
      <div className="container mx-auto px-4">
        <motion.h2 
          className="text-4xl font-bold mb-12 text-center text-deep-blue"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5 }}
        >
          Get In Touch
        </motion.h2>
        <motion.form 
          onSubmit={handleSubmit} 
          className="max-w-lg mx-auto"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5, delay: 0.2 }}
        >
          <div className="mb-6">
            <label htmlFor="name" className="block mb-2 text-sm font-medium text-dark-gray">
              Name
            </label>
            <Input
              type="text"
              id="name"
              name="name"
              value={formData.name}
              onChange={handleChange}
              className="w-full"
            />
            {errors.name && <p className="mt-1 text-red-500 text-sm">{errors.name}</p>}
          </div>
          <div className="mb-6">
            <label htmlFor="email" className="block mb-2 text-sm font-medium text-dark-gray">
              Email
            </label>
            <Input
              type="email"
              id="email"
              name="email"
              value={formData.email}
              onChange={handleChange}
              className="w-full"
            />
            {errors.email && <p className="mt-1 text-red-500 text-sm">{errors.email}</p>}
          </div>
          <div className="mb-6">
            <label htmlFor="message" className="block mb-2 text-sm font-medium text-dark-gray">
              Message
            </label>
            <Textarea
              id="message"
              name="message"
              value={formData.message}
              onChange={handleChange}
              className="w-full"
              rows={4}
            />
            {errors.message && <p className="mt-1 text-red-500 text-sm">{errors.message}</p>}
          </div>
          <Button type="submit" className="w-full bg-vibrant-orange text-white hover:bg-light-blue">
            Send Message
          </Button>
        </motion.form>
      </div>
    </section>
  );
};

export default ContactForm;
ENDFILE: .\components\contactForm.tsx

STARTFILE: .\components\footer.tsx
import Link from 'next/link';
import { Facebook, Twitter, Instagram, Linkedin } from 'lucide-react';

const Footer = () => {
  return (
    <footer className="bg-deep-blue text-white py-12">
      <div className="container mx-auto px-4">
        <div className="grid grid-cols-1 md:grid-cols-4 gap-8">
          <div>
            <h3 className="text-xl font-bold mb-4">Laas Media</h3>
            <p className="mb-4">Where Creativity Meets Technology</p>
            <div className="flex space-x-4">
              <Link href="#" className="hover:text-light-blue"><Facebook size={24} /></Link>
              <Link href="#" className="hover:text-light-blue"><Twitter size={24} /></Link>
              <Link href="#" className="hover:text-light-blue"><Instagram size={24} /></Link>
              <Link href="#" className="hover:text-light-blue"><Linkedin size={24} /></Link>
            </div>
          </div>
          <div>
            <h4 className="text-lg font-semibold mb-4">Services</h4>
            <ul className="space-y-2">
              <li><Link href="#" className="hover:text-light-blue">Logo Design</Link></li>
              <li><Link href="#" className="hover:text-light-blue">Brand Design</Link></li>
              <li><Link href="#" className="hover:text-light-blue">Web Development</Link></li>
              <li><Link href="#" className="hover:text-light-blue">Social Media Marketing</Link></li>
            </ul>
          </div>
          <div>
            <h4 className="text-lg font-semibold mb-4">Quick Links</h4>
            <ul className="space-y-2">
              <li><Link href="#" className="hover:text-light-blue">About Us</Link></li>
              <li><Link href="#" className="hover:text-light-blue">Portfolio</Link></li>
              <li><Link href="#" className="hover:text-light-blue">Blog</Link></li>
              <li><Link href="#" className="hover:text-light-blue">Contact</Link></li>
            </ul>
          </div>
          <div>
            <h4 className="text-lg font-semibold mb-4">Contact Us</h4>
            <p className="mb-2">123 Creative Street</p>
            <p className="mb-2">Innovationville, IN 12345</p>
            <p className="mb-2">Phone: (123) 456-7890</p>
            <p>Email: info@laasmedia.com</p>
          </div>
        </div>
        <div className="mt-8 pt-8 border-t border-white/10 text-center">
          <p>&copy; 2024 Laas Media. All rights reserved.</p>
        </div>
      </div>
    </footer>
  );
};

export default Footer;
ENDFILE: .\components\footer.tsx

STARTFILE: .\components\header.tsx
"use client";

import { useState, useEffect } from 'react';
import Link from 'next/link';
import { Button } from "@/components/ui/button";
import { Menu } from 'lucide-react';
import { Sheet, SheetContent, SheetTrigger, SheetClose } from "@/components/ui/sheet";

const Header = () => {
  const [isScrolled, setIsScrolled] = useState(false);
  const [isOpen, setIsOpen] = useState(false);

  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 0);
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  const navItems = ['Services', 'About', 'Portfolio', 'Blog', 'Contact'];

  return (
    <header className={`sticky top-0 z-50 transition-all duration-300 ${isScrolled ? 'bg-white shadow-md' : 'bg-transparent'}`}>
      <div className="container mx-auto px-20 py-4 flex justify-between items-center">
        <Link href="/" className={`text-2xl font-bold ${isScrolled ? 'text-deep-blue' : 'text-deep-blue'}`}>
          Laas Media
        </Link>
        <nav className="hidden md:block">
          <ul className="flex space-x-6">
            {navItems.map((item) => (
              <li key={item}>
                <Link href={`#${item.toLowerCase()}`} className={`${isScrolled ? 'text-dark-gray hover:text-deep-blue' : 'text-dark-gray hover:text-light-blue'}`}>
                  {item}
                </Link>
              </li>
            ))}
          </ul>
        </nav>
        <Button variant="default" className={`hidden md:block ${isScrolled ? 'bg-vibrant-orange text-white hover:bg-light-blue' : 'bg-vibrant-orange text-deep-blue hover:bg-light-blue hover:text-white'}`}>
          Get Started
        </Button>
        <Sheet open={isOpen} onOpenChange={setIsOpen}>
          <SheetTrigger asChild>
            <Button variant="ghost" size="icon" className="md:hidden">
              <Menu className={isScrolled ? 'text-deep-blue' : 'text-deep-blue'} />
              <span className="sr-only">Toggle menu</span>
            </Button>
          </SheetTrigger>
          <SheetContent>
            <nav className="flex flex-col space-y-4 mt-8">
              {navItems.map((item) => (
                <SheetClose asChild key={item}>
                  <Link
                    href={`#${item.toLowerCase()}`}
                    className="text-lg font-medium text-dark-gray hover:text-deep-blue"
                    onClick={() => setIsOpen(false)}
                  >
                    {item}
                  </Link>
                </SheetClose>
              ))}
              <SheetClose asChild>
                <Button variant="default" className="w-full mt-4 bg-vibrant-orange text-white hover:bg-light-blue" onClick={() => setIsOpen(false)}>
                  Get Started
                </Button>
              </SheetClose>
            </nav>
          </SheetContent>
        </Sheet>
      </div>
    </header>
  );
};

export default Header;
ENDFILE: .\components\header.tsx

STARTFILE: .\components\portfolio.tsx
"use client";

import { useState, useRef, useEffect } from 'react';
import Image from 'next/image';
import { motion } from 'framer-motion';
import { ChevronLeft, ChevronRight } from 'lucide-react';

const portfolioItems = [
  { id: 1, title: 'Brand Identity Design', category: 'Branding', image: 'https://img.freepik.com/free-vector/gradient-company-logo-collection_23-2148983378.jpg' },
  { id: 2, title: 'E-commerce Website', category: 'Web Development', image: 'https://img.freepik.com/free-vector/ecommerce-web-page-concept-illustration_114360-8204.jpg' },
  { id: 3, title: 'Mobile App UI/UX', category: 'UI/UX Design', image: 'https://img.freepik.com/free-vector/gradient-ui-ux-background_23-2149065782.jpg' },
  { id: 4, title: 'Social Media Campaign', category: 'Marketing', image: 'https://img.freepik.com/free-vector/social-media-marketing-concept-marketing-icons-flat-illustration_1284-52697.jpg' },
  { id: 5, title: 'Product Packaging', category: 'Branding', image: 'https://img.freepik.com/free-psd/packaging-design-mock-up-arrangement_23-2149134863.jpg' },
  { id: 6, title: 'Corporate Website Redesign', category: 'Web Development', image: 'https://img.freepik.com/free-vector/website-development-banner_33099-1687.jpg' },
];

const categories = ['All', 'Branding', 'Web Development', 'UI/UX Design', 'Marketing'];

const Portfolio = () => {
  const [filter, setFilter] = useState('All');
  const [scrollPosition, setScrollPosition] = useState(0);
  const navRef = useRef<HTMLDivElement>(null);

  const filteredItems = filter === 'All' 
    ? portfolioItems 
    : portfolioItems.filter(item => item.category === filter);

  const handleScroll = (direction: 'left' | 'right') => {
    if (navRef.current) {
      const scrollAmount = 100;
      const newPosition = direction === 'left' 
        ? Math.max(0, scrollPosition - scrollAmount)
        : Math.min(navRef.current.scrollWidth - navRef.current.clientWidth, scrollPosition + scrollAmount);
      setScrollPosition(newPosition);
      navRef.current.scrollTo({ left: newPosition, behavior: 'smooth' });
    }
  };

  useEffect(() => {
    const handleResize = () => {
      if (navRef.current) {
        setScrollPosition(0);
        navRef.current.scrollTo({ left: 0 });
      }
    };

    window.addEventListener('resize', handleResize);
    return () => window.removeEventListener('resize', handleResize);
  }, []);

  return (
    <section id="portfolio" className="w-full py-20 bg-light-gray">
      <div className="container mx-auto px-4">
        <h2 className="text-4xl font-bold mb-12 text-center text-deep-blue">Our Portfolio</h2>
        <div className="relative mb-8">
          <div className="hidden md:flex justify-center mb-8">
            {categories.map((category) => (
              <button
                key={category}
                className={`mx-2 px-4 py-2 rounded-full ${
                  filter === category ? 'bg-vibrant-orange text-white' : 'bg-white text-dark-gray'
                } transition-colors duration-300`}
                onClick={() => setFilter(category)}
              >
                {category}
              </button>
            ))}
          </div>
          <div className="md:hidden flex items-center">
            <button
              onClick={() => handleScroll('left')}
              className="p-2 bg-white rounded-full shadow-md"
              aria-label="Scroll left"
            >
              <ChevronLeft size={24} />
            </button>
            <div 
              ref={navRef} 
              className="flex overflow-x-auto scrollbar-hide mx-2 space-x-2"
              style={{ scrollBehavior: 'smooth' }}
            >
              {categories.map((category) => (
                <button
                  key={category}
                  className={`flex-shrink-0 px-4 py-2 rounded-full ${
                    filter === category ? 'bg-vibrant-orange text-white' : 'bg-white text-dark-gray'
                  } transition-colors duration-300`}
                  onClick={() => setFilter(category)}
                >
                  {category}
                </button>
              ))}
            </div>
            <button
              onClick={() => handleScroll('right')}
              className="p-2 bg-white rounded-full shadow-md"
              aria-label="Scroll right"
            >
              <ChevronRight size={24} />
            </button>
          </div>
        </div>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {filteredItems.map((item) => (
            <motion.div
              key={item.id}
              className="bg-white rounded-lg overflow-hidden shadow-md"
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.5 }}
            >
              <Image src={item.image} alt={item.title} width={400} height={300} className="w-full h-48 object-cover" />
              <div className="p-4">
                <h3 className="text-xl font-semibold mb-2 text-deep-blue">{item.title}</h3>
                <p className="text-dark-gray">{item.category}</p>
              </div>
            </motion.div>
          ))}
        </div>
      </div>
    </section>
  );
};

export default Portfolio;
ENDFILE: .\components\portfolio.tsx

STARTFILE: .\components\smoothScroll.tsx
'use client';

import { useEffect } from 'react';

const SmoothScroll: React.FC = () => {
  useEffect(() => {
    const smoothScroll = (e: MouseEvent) => {
      const target = e.target as HTMLAnchorElement;
      if (!target || target.tagName !== 'A') return;
      
      const href = target.getAttribute('href');
      if (href && href.startsWith('#')) {
        e.preventDefault();
        const targetElement = document.querySelector(href);
        if (targetElement) {
          targetElement.scrollIntoView({
            behavior: 'smooth',
            block: 'start',
          });
        }
      }
    };

    // Use a more specific type for the event listener
    const handleClick = (e: Event) => {
      if (e instanceof MouseEvent) {
        smoothScroll(e);
      }
    };

    document.addEventListener('click', handleClick);

    return () => {
      document.removeEventListener('click', handleClick);
    };
  }, []);

  return null;
};

export default SmoothScroll;
ENDFILE: .\components\smoothScroll.tsx

STARTFILE: .\components\testimonial.tsx
"use client";
import { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { ChevronLeft, ChevronRight } from "lucide-react";
import Image from "next/image";

const testimonials = [
  {
    id: 1,
    name: "John Doe",
    role: "CEO, Tech Innovators",
    content:
      "Laas Media transformed our online presence. Their innovative designs and cutting-edge solutions have significantly boosted our customer engagement.",
    avatar: "https://i.pravatar.cc/150?img=1",
  },
  {
    id: 2,
    name: "Jane Smith",
    role: "Marketing Director, Global Brands",
    content:
      "The team at Laas Media is exceptional. Their creative approach to our branding needs exceeded our expectations and set us apart in a crowded market.",
    avatar: "https://i.pravatar.cc/150?img=5",
  },
  {
    id: 3,
    name: "Mike Johnson",
    role: "Founder, StartUp Success",
    content:
      "Working with Laas Media was a game-changer for our startup. Their expertise in web development and UI/UX design helped us create a product our users love.",
    avatar: "https://i.pravatar.cc/150?img=8",
  },
];

const Testimonial = () => {
  const [currentIndex, setCurrentIndex] = useState(0);

  const nextTestimonial = () => {
    setCurrentIndex((prevIndex) => (prevIndex + 1) % testimonials.length);
  };

  const prevTestimonial = () => {
    setCurrentIndex(
      (prevIndex) => (prevIndex - 1 + testimonials.length) % testimonials.length
    );
  };

  return (
    <section className="w-full py-20 gradient-bg-text bg-gradient-to-r from-deep-blue to-light-blue text-white">
      <div className="container mx-auto px-4">
        <h2 className="text-4xl md:text-5xl font-bold mb-12 text-center">
          What Our Clients Say
        </h2>
        <div className="relative max-w-4xl mx-auto">
          <div className="glass-effect p-8 rounded-lg">
            <AnimatePresence mode="wait">
              <motion.div
                key={currentIndex}
                initial={{ opacity: 0, x: 50 }}
                animate={{ opacity: 1, x: 0 }}
                exit={{ opacity: 0, x: -50 }}
                transition={{ duration: 0.5 }}
                className="flex flex-col md:flex-row items-center text-center md:text-left space-y-6 md:space-y-0"
              >
                <div className="md:w-1/3">
                  <Image
                    src={testimonials[currentIndex].avatar}
                    alt={testimonials[currentIndex].name}
                    width={150}
                    height={150}
                    className="rounded-full mx-auto md:mx-0 border-4 border-white shadow-lg"
                  />
                </div>
                <div className="md:w-2/3 md:pl-8">
                  <p className="text-xl mb-6 italic">
                    &ldquo;{testimonials[currentIndex].content}&rdquo;
                  </p>
                  <p className="font-semibold text-lg">
                    {testimonials[currentIndex].name}
                  </p>
                  <p className="text-light-blue">
                    {testimonials[currentIndex].role}
                  </p>
                </div>
              </motion.div>
            </AnimatePresence>
          </div>
          <button
            onClick={prevTestimonial}
            className="absolute left-0 top-1/2 transform -translate-y-1/2 bg-white text-deep-blue p-2 rounded-full hover:bg-light-blue hover:text-white transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-white"
            aria-label="Previous testimonial"
          >
            <ChevronLeft size={24} />
          </button>
          <button
            onClick={nextTestimonial}
            className="absolute right-0 top-1/2 transform -translate-y-1/2 bg-white text-deep-blue p-2 rounded-full hover:bg-light-blue hover:text-white transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-white"
            aria-label="Next testimonial"
          >
            <ChevronRight size={24} />
          </button>
        </div>
      </div>
    </section>
  );
};

export default Testimonial;

ENDFILE: .\components\testimonial.tsx

STARTFILE: .\components\ui\button.tsx
import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const buttonVariants = cva(
  "inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50",
  {
    variants: {
      variant: {
        default: "bg-primary text-primary-foreground hover:bg-primary/90",
        destructive:
          "bg-destructive text-destructive-foreground hover:bg-destructive/90",
        outline:
          "border border-input bg-background hover:bg-accent hover:text-accent-foreground",
        secondary:
          "bg-secondary text-secondary-foreground hover:bg-secondary/80",
        ghost: "hover:bg-accent hover:text-accent-foreground",
        link: "text-primary underline-offset-4 hover:underline",
      },
      size: {
        default: "h-10 px-4 py-2",
        sm: "h-9 rounded-md px-3",
        lg: "h-11 rounded-md px-8",
        icon: "h-10 w-10",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)

export interface ButtonProps
  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
    VariantProps<typeof buttonVariants> {
  asChild?: boolean
}

const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
  ({ className, variant, size, asChild = false, ...props }, ref) => {
    const Comp = asChild ? Slot : "button"
    return (
      <Comp
        className={cn(buttonVariants({ variant, size, className }))}
        ref={ref}
        {...props}
      />
    )
  }
)
Button.displayName = "Button"

export { Button, buttonVariants }

ENDFILE: .\components\ui\button.tsx

STARTFILE: .\components\ui\input.tsx
import * as React from "react"

import { cn } from "@/lib/utils"

export interface InputProps
  extends React.InputHTMLAttributes<HTMLInputElement> {}

const Input = React.forwardRef<HTMLInputElement, InputProps>(
  ({ className, type, ...props }, ref) => {
    return (
      <input
        type={type}
        className={cn(
          "flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
          className
        )}
        ref={ref}
        {...props}
      />
    )
  }
)
Input.displayName = "Input"

export { Input }

ENDFILE: .\components\ui\input.tsx

STARTFILE: .\components\ui\sheet.tsx
"use client"

import * as React from "react"
import * as SheetPrimitive from "@radix-ui/react-dialog"
import { cva, type VariantProps } from "class-variance-authority"
import { X } from "lucide-react"

import { cn } from "@/lib/utils"

const Sheet = SheetPrimitive.Root

const SheetTrigger = SheetPrimitive.Trigger

const SheetClose = SheetPrimitive.Close

const SheetPortal = SheetPrimitive.Portal

const SheetOverlay = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Overlay
    className={cn(
      "fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      className
    )}
    {...props}
    ref={ref}
  />
))
SheetOverlay.displayName = SheetPrimitive.Overlay.displayName

const sheetVariants = cva(
  "fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500",
  {
    variants: {
      side: {
        top: "inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top",
        bottom:
          "inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom",
        left: "inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm",
        right:
          "inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm",
      },
    },
    defaultVariants: {
      side: "right",
    },
  }
)

interface SheetContentProps
  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,
    VariantProps<typeof sheetVariants> {}

const SheetContent = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Content>,
  SheetContentProps
>(({ side = "right", className, children, ...props }, ref) => (
  <SheetPortal>
    <SheetOverlay />
    <SheetPrimitive.Content
      ref={ref}
      className={cn(sheetVariants({ side }), className)}
      {...props}
    >
      {children}
      <SheetPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary">
        <X className="h-4 w-4" />
        <span className="sr-only">Close</span>
      </SheetPrimitive.Close>
    </SheetPrimitive.Content>
  </SheetPortal>
))
SheetContent.displayName = SheetPrimitive.Content.displayName

const SheetHeader = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col space-y-2 text-center sm:text-left",
      className
    )}
    {...props}
  />
)
SheetHeader.displayName = "SheetHeader"

const SheetFooter = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
      className
    )}
    {...props}
  />
)
SheetFooter.displayName = "SheetFooter"

const SheetTitle = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Title
    ref={ref}
    className={cn("text-lg font-semibold text-foreground", className)}
    {...props}
  />
))
SheetTitle.displayName = SheetPrimitive.Title.displayName

const SheetDescription = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Description
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
SheetDescription.displayName = SheetPrimitive.Description.displayName

export {
  Sheet,
  SheetPortal,
  SheetOverlay,
  SheetTrigger,
  SheetClose,
  SheetContent,
  SheetHeader,
  SheetFooter,
  SheetTitle,
  SheetDescription,
}

ENDFILE: .\components\ui\sheet.tsx

STARTFILE: .\components\ui\textarea.tsx
import * as React from "react"

import { cn } from "@/lib/utils"

export interface TextareaProps
  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}

const Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(
  ({ className, ...props }, ref) => {
    return (
      <textarea
        className={cn(
          "flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
          className
        )}
        ref={ref}
        {...props}
      />
    )
  }
)
Textarea.displayName = "Textarea"

export { Textarea }

ENDFILE: .\components\ui\textarea.tsx

STARTFILE: .\lib\utils.ts
import { type ClassValue, clsx } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}

ENDFILE: .\lib\utils.ts

STARTFILE: .\scripts\list_files.py
import os

def list_files(folder, excluded_folders, excluded_extensions, included_extensions):
  file_list = []
  for root, dirs, files in os.walk(folder):
    # Exclude specified folders
    dirs[:] = [d for d in dirs if d not in excluded_folders]
    for file in files:
      # Include files with given extensions only
      if file.endswith(tuple(included_extensions)):
        file_list.append(os.path.join(root, file))
      # Exclude files with given extensions
      elif file.endswith(tuple(excluded_extensions)):
        file_list.append(os.path.join(root, file))
  return file_list

def create_text_file(file_list, output_file):
  with open(output_file, 'w') as f:
    # add comma separated file names
    f.write(str.format("Project file structure:\n{}\n\n", "\n".join(file_list)))
    for file in file_list:
      with open(file, 'r') as file_content:
        print(f"Reading file: {file}")
        f.write(f"STARTFILE: {file}\n")
        f.write(file_content.read())
        f.write(f"\nENDFILE: {file}\n\n")

# Example usage
folder = '.'
excluded_folders = [
  'node_modules',
  'dist',
  'docs',
  '.expo',
  '.next',
  '.git',
  '.idea',
  'build',
  'out',
  'target',
  'debug',
  'release',
  'bin',
  'obj',
]

excluded_extensions = [
  '.sql',
  '.java',
  '.xml',
  '.properties',
  '.cs',
  'package.json',
  'tsconfig.json',
]

included_extensions = [
  '.js',
  '.ts',
  '.tsx',
  '.css',
  '.html',
  'translation.json',
  '.sql',
  '.java',
  '.xml',
  '.properties',
  '.cs',
  'package.json',
  'tsconfig.json',
  '.py',
  # 'wordsDatabase.json',
]

output_file = 'output.txt'

file_list = list_files(folder, excluded_folders,excluded_extensions, included_extensions)
create_text_file(file_list, output_file)
ENDFILE: .\scripts\list_files.py

